{"title":"常见面试题","slug":"11","date":"2017-07-14T12:12:30.000Z","updated":"2017-08-12T06:02:27.000Z","comments":true,"excerpt":"<p>##1.get和post的区别##</p>\n<ul>\n<li>get向指定的资源请求数据,请求的数据会附在URL之后,就是把数据放置在请求行（request line）中），以?分割URL和传输数据，多个参数用&amp;连接；</li>\n<li><p>post向指定的资源提交要被处理的数据<br>get方法，查询请求是在url中显示的，有长度限制，get方法是安全幂等的。而post方法请求是封装在http消息包体中</p>","content":"<p>##1.get和post的区别##</p>\n<ul>\n<li>get向指定的资源请求数据,请求的数据会附在URL之后,就是把数据放置在请求行（request line）中），以?分割URL和传输数据，多个参数用&amp;连接；</li>\n<li><p>post向指定的资源提交要被处理的数据<br>get方法，查询请求是在url中显示的，有长度限制，get方法是安全幂等的。而post方法请求是封装在http消息包体中</p>\n<a id=\"more\"></a>\n<p>&amp;|get|post<br>—|—|—-<br>后退/刷新|无害|请求重新提交<br>书签|可做书签|不可做<br>缓存|可被缓存|不能被缓存<br>历史|保留在浏览器记录里|不保留<br>对数据长度限制|限制（2048字符）|不限制<br>安全性|url中暴露数据|相对安全<br>可见性|url中可见|不可见</p>\n<p>总结：<br>①. 对于get来说，是向服务器端请求数据，其请求在url中可见，其长度有限制（2048字符）个体方法是安全幂等，这里的安全是指用于获取信息而非修改信息，幂等是指每次请求得到的结果都一样。<br>②. 对于post来说，是向服务器端提交数据，每次刷新或者后退都会重新提交，post请求的数据封装在http请求的首部里。</p>\n</li>\n</ul>\n<p>##2. HTTP 状态码##</p>\n<ul>\n<li><code>1XX</code>代表请求已经被接收；</li>\n<li><code>2xx</code>代表请求已成功被服务器接收、理解、并接受。常用的200表示请求已成功，请求所希望的响应头或数据体将随此响应返回；</li>\n<li><code>3xx</code>代表重定向。</li>\n<li><code>4xx</code>代表客户端错误。404表示网页不存在。</li>\n<li><code>5xx</code>代表服务器错误。500表示服务器内部错误，503表示服务器暂时不可用</li>\n</ul>\n<p>##3.前端MVC框架##<br> MVC（模型-视图-控制器）<br> Model(模型)主要与业务数据有关。<br> View(视图)是关于构件和维护一个DOM元素。应用程序数据的可视化表示。<br> Controller(控制器）用户更新视图，controller更新model.(网上没有这类型的详细文章，这里可以好好写一写，画画图，各个框架MVC之间的异同。)</p>\n<p> 如<a href=\"http://www.zhihu.com/question/20135390\" target=\"_blank\" rel=\"external\">知乎</a>，把数据请求和数据操作放在model中，对视图的操作和改变放在view中，事件绑定放在controller中。</p>\n<p>##4.闭包##<br>   请见<a href=\"http://padding.me/blog/2014/04/20/what-is-closure/\" target=\"_blank\" rel=\"external\">隔壁</a>。</p>\n<p>##5.DOCTYPE的作用？严格模式与混杂模式如何区分？它们有什么意义？<br> DOCTYPE声明位于HTML文档顶端，告诉浏览器应该用什么文档类型规范来解析这个文档；<br> 严格模式的排版和JS运作模式是以该浏览器支持的最高标准运行；而混杂模式中，页面以较宽松的向后兼容的模式显示。模拟老式浏览器的行为以防止站点无法工作。<br>；DOCTYPE不存在或者格式不正确，则浏览器以混杂模式呈现文档。</p>\n<p>##6.行内元素有哪些？块级元素有哪些？空（void  )元素有哪些？##</p>\n<p>##7.link和@import的区别 ##</p>\n<p>##8.浏览器的内核分别是什么 ##</p>\n<p>##9.常见兼容性问题 ##</p>\n<ul>\n<li>浏览器的<code>padding</code>和<code>marigin</code>不同。</li>\n</ul>\n<p>##10.语义化的理解 ##</p>\n<p>##11.HTML5的离线存储 ##<br> localStorage 长期存储数据，浏览器关闭后数据不丢失；而sessionStorage数据在浏览器关闭后自动删除。</p>\n<p>##12.cookie和session的区别##<br>  ① cookie数据存在客户的浏览器上，session数据存放在服务器端<br>  ② cookie不安全<br>  ③ session会在一定时间内保存在服务器端，访问增多，占用服务器性能。<br>  ④ 单个cookie保存的数据不超过4K</p>\n<p>##13.(写)描述一段语义的html代码吧。##</p>\n<p>##14.frame有那些缺点？##</p>\n<p>##15.请描述一下 cookies，sessionStorage 和 localStorage 的区别？##<br>cookie在浏览器和服务器间来回传递。 sessionStorage和localStorage不会<br>sessionStorage和localStorage的存储空间更大；<br>sessionStorage和localStorage有更多丰富易用的接口；<br>sessionStorage和localStorage各自独立的存储空间；</p>\n<p>##16.介绍一下CSS的盒子模型？</p>\n<p>  ① 有两种， IE 盒子模型、标准 W3C 盒子模型；IE的content部分包含了 border 和 padding;</p>\n<p>  ② 盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border).</p>\n<p>##17.CSS 选择符有哪些？哪些属性可以继承？优先级算法如何计算？ CSS3新增伪类有那些？##<br>!important&gt;id&gt;class&gt;tag</p>\n<p>##18.如何居中div？如何居中一个浮动元素？ ##</p>\n","categories":[],"tags":[{"name":"面试题","path":"api/tags/面试题.json"}]}